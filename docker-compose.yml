version: '3.8'

services:
  # PostgreSQL Service
  postgres:
    image: pgvector/pgvector:pg17
    container_name: core_agent_postgres
    environment:
      POSTGRES_USER: agent_user
      POSTGRES_PASSWORD: agent_pass
      POSTGRES_DB: agent_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - core_agent_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agent_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Service
  redis:
    image: redis/redis-stack:latest
    container_name: core_agent_redis
    environment:
      - REDIS_ARGS=--requirepass redis_password
    ports:
      - "6379:6379"
      - "8001:8001"  # RedisInsight
    volumes:
      - redis_data:/data
    networks:
      - core_agent_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Application
  core_agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: core_agent_app
    environment:
      # OpenAI Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      
      # Database URLs
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_db
      - REDIS_URL=redis://:redis_password@redis:6379
      
      # Application Configuration
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - core_agent_network
    volumes:
      - ./core:/app/core
      - ./agent:/app/agent
      - ./tests:/app/tests
    command: python -m core.main

  # Test Runner Service
  test_runner:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: core_agent_test_runner
    environment:
      # Test OpenAI Configuration
      - OPENAI_API_KEY=${TEST_OPENAI_API_KEY:-${OPENAI_API_KEY}}
      - ANTHROPIC_API_KEY=${TEST_ANTHROPIC_API_KEY:-${ANTHROPIC_API_KEY}}
      
      # Test Database URLs
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_test_db
      - REDIS_URL=redis://:redis_password@redis:6379/1
      
      # Test Configuration
      - ENVIRONMENT=test
      - LOG_LEVEL=DEBUG
      - PYTEST_ARGS=${PYTEST_ARGS:--v}
      
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - core_agent_network
    volumes:
      - ./core:/app/core
      - ./agent:/app/agent
      - ./tests:/app/tests
      - ./pytest.ini:/app/pytest.ini
    command: pytest ${PYTEST_ARGS:--v}

  # Development Service with Hot Reload
  dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: core_agent_dev
    environment:
      # Development Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - DATABASE_URL=postgresql://agent_user:agent_pass@postgres:5432/agent_dev_db
      - REDIS_URL=redis://:redis_password@redis:6379/2
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - PYTHONUNBUFFERED=1
      
    ports:
      - "8080:8000"
      - "5678:5678"  # Debugger port
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - core_agent_network
    volumes:
      - ./core:/app/core
      - ./agent:/app/agent
      - ./tests:/app/tests
    command: python -m core.main --reload

networks:
  core_agent_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: