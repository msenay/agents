version: '3.8'

services:
  # Redis - High-performance caching and real-time memory
  redis:
    image: redis:7-alpine
    container_name: coreagent-redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL - Structured, reliable persistence
  postgres:
    image: postgres:15-alpine
    container_name: coreagent-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: coreagent
      POSTGRES_USER: coreagent
      POSTGRES_PASSWORD: coreagent123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coreagent -d coreagent"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB - Flexible document storage
  mongodb:
    image: mongo:7
    container_name: coreagent-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: coreagent
      MONGO_INITDB_ROOT_PASSWORD: coreagent123
      MONGO_INITDB_DATABASE: coreagent
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  default:
    name: coreagent-network